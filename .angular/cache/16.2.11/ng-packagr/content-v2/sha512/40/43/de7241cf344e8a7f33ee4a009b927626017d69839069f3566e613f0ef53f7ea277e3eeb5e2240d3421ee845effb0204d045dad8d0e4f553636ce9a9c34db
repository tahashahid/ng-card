{"hash":"718c908a754301dfba1eaeedd47a441e251cf7cc","fesm2022":[{"exports":["NgCardDirective","NgCardModule"],"facadeModuleId":"/Users/muhammadfarhan/Documents/benutech/ng-card/dist/ng-card/esm2022/tahashahid-ng-card.mjs","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["/Users/muhammadfarhan/Documents/benutech/ng-card/dist/ng-card/esm2022/lib/ng-card.directive.mjs","/Users/muhammadfarhan/Documents/benutech/ng-card/dist/ng-card/esm2022/lib/ng-card.module.mjs","/Users/muhammadfarhan/Documents/benutech/ng-card/dist/ng-card/esm2022/public-api.mjs","/Users/muhammadfarhan/Documents/benutech/ng-card/dist/ng-card/esm2022/tahashahid-ng-card.mjs"],"name":"tahashahid-ng-card","type":"chunk","dynamicImports":[],"fileName":"tahashahid-ng-card.mjs","implicitlyLoadedBefore":[],"importedBindings":{"@angular/core":["*","Directive","Input","NgModule"]},"imports":["@angular/core"],"modules":{"/Users/muhammadfarhan/Documents/benutech/ng-card/dist/ng-card/esm2022/lib/ng-card.directive.mjs":{"code":"const defaultMessages = {\n    validDate: 'valid\\nthru',\n    monthYear: 'month/year',\n};\nconst defaultPlaceholders = {\n    number: '•••• •••• •••• ••••',\n    name: 'Full Name',\n    expiry: '••/••',\n    cvc: '•••',\n};\nclass NgCardDirective {\n    set messages(_messages) {\n        this._messages = Object.assign({}, defaultMessages, _messages);\n    }\n    get messages() {\n        return this._messages;\n    }\n    set placeholders(_placeholders) {\n        this._placeholders = Object.assign({}, defaultPlaceholders, _placeholders);\n    }\n    get placeholders() {\n        return this._placeholders;\n    }\n    constructor() {\n        this.formatting = true; // optional - default true\n        // if true, will log helpful messages for setting up Card\n        this.debug = false; // optional - default false\n    }\n    ngOnInit() {\n        new Card({\n            form: this.form,\n            container: this.container,\n            width: this.width,\n            formSelectors: {\n                numberInput: this.numberInput,\n                expiryInput: this.expiryInput,\n                cvcInput: this.cvcInput,\n                nameInput: this.fnameInput + ', ' + this.lnameInput,\n            },\n            formatting: this.formatting,\n            messages: this.messages,\n            placeholders: this.placeholders,\n            masks: this.masks,\n            debug: this.debug,\n        });\n    }\n    static { this.ɵfac = function NgCardDirective_Factory(t) { return new (t || NgCardDirective)(); }; }\n    static { this.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: NgCardDirective, selectors: [[\"\", \"ng-card\", \"\"]], inputs: { container: \"container\", numberInput: [\"number-input\", \"numberInput\"], expiryInput: [\"expiry-input\", \"expiryInput\"], cvcInput: [\"cvc-input\", \"cvcInput\"], fnameInput: [\"fname-input\", \"fnameInput\"], lnameInput: [\"lname-input\", \"lnameInput\"], form: \"form\", width: [\"card-width\", \"width\"], messages: \"messages\", placeholders: \"placeholders\", masks: \"masks\", formatting: \"formatting\", debug: \"debug\" } }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgCardDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ng-card]'\n            }]\n    }], function () { return []; }, { container: [{\n            type: Input\n        }], numberInput: [{\n            type: Input,\n            args: ['number-input']\n        }], expiryInput: [{\n            type: Input,\n            args: ['expiry-input']\n        }], cvcInput: [{\n            type: Input,\n            args: ['cvc-input']\n        }], fnameInput: [{\n            type: Input,\n            args: ['fname-input']\n        }], lnameInput: [{\n            type: Input,\n            args: ['lname-input']\n        }], form: [{\n            type: Input,\n            args: ['form']\n        }], width: [{\n            type: Input,\n            args: ['card-width']\n        }], messages: [{\n            type: Input\n        }], placeholders: [{\n            type: Input\n        }], masks: [{\n            type: Input\n        }], formatting: [{\n            type: Input\n        }], debug: [{\n            type: Input\n        }] }); })();","originalLength":8542,"removedExports":[],"renderedExports":["NgCardDirective"],"renderedLength":3157},"/Users/muhammadfarhan/Documents/benutech/ng-card/dist/ng-card/esm2022/lib/ng-card.module.mjs":{"code":"class NgCardModule {\n    static { this.ɵfac = function NgCardModule_Factory(t) { return new (t || NgCardModule)(); }; }\n    static { this.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: NgCardModule }); }\n    static { this.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({}); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgCardModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NgCardDirective],\n                imports: [],\n                exports: [NgCardDirective]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(NgCardModule, { declarations: [NgCardDirective], exports: [NgCardDirective] }); })();","originalLength":1867,"removedExports":[],"renderedExports":["NgCardModule"],"renderedLength":755},"/Users/muhammadfarhan/Documents/benutech/ng-card/dist/ng-card/esm2022/public-api.mjs":{"code":"/*\n * Public API Surface of ng-card\n */","originalLength":621,"removedExports":[],"renderedExports":[],"renderedLength":39},"/Users/muhammadfarhan/Documents/benutech/ng-card/dist/ng-card/esm2022/tahashahid-ng-card.mjs":{"code":"/**\n * Generated bundle index. Do not edit.\n */","originalLength":512,"removedExports":[],"renderedExports":[],"renderedLength":47}},"referencedFiles":[],"code":"import * as i0 from '@angular/core';\nimport { Directive, Input, NgModule } from '@angular/core';\n\nconst defaultMessages = {\n    validDate: 'valid\\nthru',\n    monthYear: 'month/year',\n};\nconst defaultPlaceholders = {\n    number: '•••• •••• •••• ••••',\n    name: 'Full Name',\n    expiry: '••/••',\n    cvc: '•••',\n};\nclass NgCardDirective {\n    set messages(_messages) {\n        this._messages = Object.assign({}, defaultMessages, _messages);\n    }\n    get messages() {\n        return this._messages;\n    }\n    set placeholders(_placeholders) {\n        this._placeholders = Object.assign({}, defaultPlaceholders, _placeholders);\n    }\n    get placeholders() {\n        return this._placeholders;\n    }\n    constructor() {\n        this.formatting = true; // optional - default true\n        // if true, will log helpful messages for setting up Card\n        this.debug = false; // optional - default false\n    }\n    ngOnInit() {\n        new Card({\n            form: this.form,\n            container: this.container,\n            width: this.width,\n            formSelectors: {\n                numberInput: this.numberInput,\n                expiryInput: this.expiryInput,\n                cvcInput: this.cvcInput,\n                nameInput: this.fnameInput + ', ' + this.lnameInput,\n            },\n            formatting: this.formatting,\n            messages: this.messages,\n            placeholders: this.placeholders,\n            masks: this.masks,\n            debug: this.debug,\n        });\n    }\n    static { this.ɵfac = function NgCardDirective_Factory(t) { return new (t || NgCardDirective)(); }; }\n    static { this.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: NgCardDirective, selectors: [[\"\", \"ng-card\", \"\"]], inputs: { container: \"container\", numberInput: [\"number-input\", \"numberInput\"], expiryInput: [\"expiry-input\", \"expiryInput\"], cvcInput: [\"cvc-input\", \"cvcInput\"], fnameInput: [\"fname-input\", \"fnameInput\"], lnameInput: [\"lname-input\", \"lnameInput\"], form: \"form\", width: [\"card-width\", \"width\"], messages: \"messages\", placeholders: \"placeholders\", masks: \"masks\", formatting: \"formatting\", debug: \"debug\" } }); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgCardDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ng-card]'\n            }]\n    }], function () { return []; }, { container: [{\n            type: Input\n        }], numberInput: [{\n            type: Input,\n            args: ['number-input']\n        }], expiryInput: [{\n            type: Input,\n            args: ['expiry-input']\n        }], cvcInput: [{\n            type: Input,\n            args: ['cvc-input']\n        }], fnameInput: [{\n            type: Input,\n            args: ['fname-input']\n        }], lnameInput: [{\n            type: Input,\n            args: ['lname-input']\n        }], form: [{\n            type: Input,\n            args: ['form']\n        }], width: [{\n            type: Input,\n            args: ['card-width']\n        }], messages: [{\n            type: Input\n        }], placeholders: [{\n            type: Input\n        }], masks: [{\n            type: Input\n        }], formatting: [{\n            type: Input\n        }], debug: [{\n            type: Input\n        }] }); })();\n\nclass NgCardModule {\n    static { this.ɵfac = function NgCardModule_Factory(t) { return new (t || NgCardModule)(); }; }\n    static { this.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: NgCardModule }); }\n    static { this.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({}); }\n}\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgCardModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NgCardDirective],\n                imports: [],\n                exports: [NgCardDirective]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(NgCardModule, { declarations: [NgCardDirective], exports: [NgCardDirective] }); })();\n\n/*\n * Public API Surface of ng-card\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgCardDirective, NgCardModule };\n//# sourceMappingURL=tahashahid-ng-card.mjs.map\n","map":null,"preliminaryFileName":"tahashahid-ng-card.mjs","sourcemapFileName":"tahashahid-ng-card.mjs.map"},{"fileName":"tahashahid-ng-card.mjs.map","needsCodeReference":false,"source":"{\"version\":3,\"file\":\"tahashahid-ng-card.mjs\",\"sources\":[\"../../../projects/ng-card/src/lib/ng-card.directive.ts\",\"../../../projects/ng-card/src/lib/ng-card.module.ts\",\"../../../projects/ng-card/src/public-api.ts\",\"../../../projects/ng-card/src/tahashahid-ng-card.ts\"],\"sourcesContent\":[\"import { Directive, Input, OnInit } from '@angular/core';\\n// import * as Card from 'card/dist/card';\\ndeclare var Card: any\\n\\nconst defaultMessages = {\\n  validDate: 'valid\\\\nthru',\\n  monthYear: 'month/year',\\n};\\n\\nconst defaultPlaceholders = {\\n  number: '•••• •••• •••• ••••',\\n  name: 'Full Name',\\n  expiry: '••/••',\\n  cvc: '•••',\\n};\\n\\n@Directive({\\n  selector: '[ng-card]'\\n})\\nexport class NgCardDirective implements OnInit {\\n\\n  @Input() container: string;\\n  @Input('number-input') numberInput: string;\\n  @Input('expiry-input') expiryInput: string;\\n  @Input('cvc-input') cvcInput: string;\\n  @Input('fname-input') fnameInput: string;\\n  @Input('lname-input') lnameInput: string;\\n  @Input('form') form: HTMLElement;\\n\\n  @Input('card-width') width: number; // optional — default 350px\\n  // Strings for translation - optional\\n  _messages;\\n  @Input() set messages(_messages: any) {\\n    this._messages = Object.assign({}, defaultMessages, _messages);\\n  }\\n  get messages() {\\n    return this._messages;\\n  }\\n\\n  // Default placeholders for rendered fields - optional\\n  _placeholders;\\n  @Input() set placeholders(_placeholders: any) {\\n    this._placeholders = Object.assign({}, defaultPlaceholders, _placeholders);\\n  }\\n  get placeholders() {\\n    return this._placeholders;\\n  }\\n\\n  @Input() masks: any;\\n\\n  @Input() formatting: boolean = true; // optional - default true\\n\\n  // if true, will log helpful messages for setting up Card\\n  @Input() debug: boolean = false; // optional - default false\\n\\n  constructor(\\n  ) { }\\n\\n  ngOnInit(): void {\\n    new Card({\\n      form: this.form,\\n      container: this.container,\\n      width: this.width,\\n      formSelectors: {\\n        numberInput: this.numberInput,\\n        expiryInput: this.expiryInput,\\n        cvcInput: this.cvcInput,\\n        nameInput: this.fnameInput + ', ' + this.lnameInput,\\n      },\\n      formatting: this.formatting,\\n      messages: this.messages,\\n      placeholders: this.placeholders,\\n      masks: this.masks,\\n      debug: this.debug,\\n    });\\n  }\\n\\n}\\n\",\"import { NgModule } from '@angular/core';\\nimport { NgCardDirective } from './ng-card.directive';\\n\\n\\n\\n@NgModule({\\n  declarations: [NgCardDirective],\\n  imports: [\\n  ],\\n  exports: [NgCardDirective]\\n})\\nexport class NgCardModule { }\\n\",\"/*\\n * Public API Surface of ng-card\\n */\\n\\nexport * from './lib/ng-card.directive';\\nexport * from './lib/ng-card.module';\\n\",\"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './public-api';\\n\"],\"names\":[],\"mappings\":\"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\"}","type":"asset"}]}